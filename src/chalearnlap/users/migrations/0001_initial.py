# Generated by Django 4.0.6 on 2022-07-17 08:11

import ckeditor.fields
import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Affiliation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Chalearn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home_text', ckeditor.fields.RichTextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CIMLBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
                ('content', ckeditor.fields.RichTextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, null=True)),
                ('last_name', models.CharField(max_length=30, null=True)),
                ('bio', models.TextField(max_length=3000)),
                ('avatar', models.ImageField(default='/static/images/default.jpg', null=True, upload_to=users.models.partner_member_avatar_path)),
                ('email', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', ckeditor.fields.RichTextField()),
                ('software', ckeditor.fields.RichTextField(null=True)),
                ('metric', ckeditor.fields.RichTextField(null=True)),
                ('is_public', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, null=True)),
                ('description', ckeditor.fields.RichTextField()),
                ('is_public', models.BooleanField(default=False)),
                ('evaluation_file', models.FileField(null=True, upload_to=users.models.dataset_path)),
                ('gt_file', models.FileField(null=True, upload_to=users.models.dataset_path)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', ckeditor.fields.RichTextField()),
                ('is_public', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Event_Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.event')),
            ],
        ),
        migrations.CreateModel(
            name='Help',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('help_text', ckeditor.fields.RichTextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, null=True)),
                ('last_name', models.CharField(max_length=30, null=True)),
                ('bio', models.TextField(max_length=3000)),
                ('avatar', models.ImageField(null=True, upload_to=users.models.user_avatar_path)),
                ('main_org', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('newsletter', models.BooleanField(default=False)),
                ('affiliation', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.affiliation')),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, null=True)),
                ('content', ckeditor.fields.RichTextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=100, null=True)),
                ('rank', models.IntegerField(null=True)),
                ('sub_rank', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Result_Grid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instructions', ckeditor.fields.RichTextField(null=True)),
                ('threshold', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.event')),
            ],
            bases=('users.event',),
        ),
        migrations.CreateModel(
            name='Special_Issue',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.event')),
            ],
            bases=('users.event',),
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.event')),
            ],
            bases=('users.event',),
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', ckeditor.fields.RichTextField()),
                ('metrics', ckeditor.fields.RichTextField(null=True)),
                ('baseline', ckeditor.fields.RichTextField(null=True)),
                ('dataset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.dataset')),
                ('challenge', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.challenge')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction_file', models.FileField(null=True, upload_to=users.models.prediction_path)),
                ('ground_truth', models.FileField(null=True, upload_to=users.models.gt_path)),
                ('output', models.FileField(null=True, upload_to=users.models.output_path)),
                ('rank', models.IntegerField(null=True)),
                ('grid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.result_grid')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
                ('score', models.FloatField(null=True)),
                ('result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.result')),
                ('submission', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.submission')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule_Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, null=True)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('date', models.DateTimeField()),
                ('dataset_schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.dataset')),
                ('event_program', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_program', to='users.event')),
                ('event_schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_schedule', to='users.event')),
                ('schedule_event_parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.schedule_event')),
            ],
        ),
        migrations.CreateModel(
            name='Result_User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
                ('content', ckeditor.fields.RichTextField(null=True)),
                ('paper', models.FileField(null=True, upload_to=users.models.paper_path)),
                ('result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.result')),
                ('submission', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.submission')),
            ],
        ),
        migrations.AddField(
            model_name='result_grid',
            name='track',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.track'),
        ),
        migrations.AddField(
            model_name='result',
            name='grid',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.result_grid'),
        ),
        migrations.CreateModel(
            name='Publication_Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fk_event_publication', to='users.event')),
                ('publication', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fk_publication_event', to='users.publication')),
            ],
        ),
        migrations.CreateModel(
            name='Publication_Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fk_dataset_publication', to='users.dataset')),
                ('publication', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fk_publication_dataset', to='users.publication')),
            ],
        ),
        migrations.AddField(
            model_name='publication',
            name='events',
            field=models.ManyToManyField(through='users.Publication_Event', to='users.event'),
        ),
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=2, null=True)),
                ('description', ckeditor.fields.RichTextField()),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Profile_Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fk_event', to='users.event')),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fk_profile', to='users.profile')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.role')),
            ],
        ),
        migrations.CreateModel(
            name='Profile_Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fk_dataset_profile', to='users.dataset')),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fk_profile_dataset', to='users.profile')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.role')),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='events',
            field=models.ManyToManyField(through='users.Profile_Event', to='users.event'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('url', models.CharField(max_length=500)),
                ('banner', models.ImageField(null=True, upload_to=users.models.partner_avatar_path)),
                ('contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.contact')),
                ('events', models.ManyToManyField(through='users.Event_Partner', to='users.event')),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', ckeditor.fields.RichTextField()),
                ('upload_date', models.DateTimeField()),
                ('dataset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.dataset')),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.event')),
            ],
        ),
        migrations.CreateModel(
            name='Grid_Header',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('grid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.result_grid')),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
                ('file', models.FileField(null=True, upload_to=users.models.data_path)),
                ('url', models.CharField(max_length=500, null=True)),
                ('data', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.data')),
            ],
        ),
        migrations.AddField(
            model_name='event_partner',
            name='partner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.partner'),
        ),
        migrations.AddField(
            model_name='event_partner',
            name='role',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.role'),
        ),
        migrations.AddField(
            model_name='data',
            name='dataset',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.dataset'),
        ),
        migrations.AddField(
            model_name='publication',
            name='issue',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fk_issue_publication', to='users.special_issue'),
        ),
        migrations.CreateModel(
            name='Gallery_Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='workshop_gallery')),
                ('description', ckeditor.fields.RichTextField(null=True)),
                ('workshop', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.workshop')),
            ],
        ),
        migrations.CreateModel(
            name='Event_Relation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', ckeditor.fields.RichTextField(null=True)),
                ('dataset_associated', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dataset_associated', to='users.dataset')),
                ('dataset_relation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dataset_relation', to='users.dataset')),
                ('event_associated', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_associated', to='users.event')),
                ('challenge_relation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='challenge_relation', to='users.challenge')),
                ('issue_relation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='issue_relation', to='users.special_issue')),
                ('workshop_relation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workshop_relation', to='users.workshop')),
            ],
        ),
        migrations.AddField(
            model_name='dataset',
            name='tracks',
            field=models.ManyToManyField(through='users.Track', to='users.challenge'),
        ),
    ]
